// Mocks generated by Mockito 5.4.4 from annotations
// in project_kepler/test/unit/api_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:project_kepler/data/repositories/api_repository_impl.dart'
    as _i4;
import 'package:project_kepler/domain/entities/agency.dart' as _i6;
import 'package:project_kepler/domain/entities/event.dart' as _i2;
import 'package:project_kepler/domain/entities/launch.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEvent_0 extends _i1.SmartFake implements _i2.Event {
  _FakeEvent_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLaunch_1 extends _i1.SmartFake implements _i3.Launch {
  _FakeLaunch_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRepositoryImpl extends _i1.Mock implements _i4.ApiRepositoryImpl {
  @override
  _i5.Future<List<_i3.Launch>> getLaunchList() => (super.noSuchMethod(
        Invocation.method(
          #getLaunchList,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Launch>>.value(<_i3.Launch>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Launch>>.value(<_i3.Launch>[]),
      ) as _i5.Future<List<_i3.Launch>>);

  @override
  _i5.Future<List<_i3.Launch>> getUpcomingLaunchList() => (super.noSuchMethod(
        Invocation.method(
          #getUpcomingLaunchList,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Launch>>.value(<_i3.Launch>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Launch>>.value(<_i3.Launch>[]),
      ) as _i5.Future<List<_i3.Launch>>);

  @override
  _i5.Future<List<_i2.Event>> getAllEvents() => (super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Event>>.value(<_i2.Event>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Event>>.value(<_i2.Event>[]),
      ) as _i5.Future<List<_i2.Event>>);

  @override
  _i5.Future<_i2.Event> getEventById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEventById,
          [id],
        ),
        returnValue: _i5.Future<_i2.Event>.value(_FakeEvent_0(
          this,
          Invocation.method(
            #getEventById,
            [id],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.Event>.value(_FakeEvent_0(
          this,
          Invocation.method(
            #getEventById,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Event>);

  @override
  _i5.Future<_i3.Launch> getLaunchDetailsById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLaunchDetailsById,
          [id],
        ),
        returnValue: _i5.Future<_i3.Launch>.value(_FakeLaunch_1(
          this,
          Invocation.method(
            #getLaunchDetailsById,
            [id],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Launch>.value(_FakeLaunch_1(
          this,
          Invocation.method(
            #getLaunchDetailsById,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Launch>);

  @override
  _i5.Future<_i6.Agency?> getAgencyById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getAgencyById,
          [id],
        ),
        returnValue: _i5.Future<_i6.Agency?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.Agency?>.value(),
      ) as _i5.Future<_i6.Agency?>);
}
